@page "/pokedex"

@inject PokeApiService PokeApiService
@rendermode InteractiveServer

<h3>Pokedex</h3>

@if (PokemonList == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-5 g-4">
        @foreach (var pokemon in PokemonList)
        {
            <div class="col">
                <div class="card" >
                    <img src="@pokemon.Sprites.FrontDefault" class="card-img-top" alt="@pokemon.Name" />
                    <div class="card-body text-center">
                        <h6 class="card-title pokemon-id">@Helper.FormatPokemonId(pokemon.Id)</h6>
                        <h5 class="card-text pokemon-name">@Helper.Capitalize(pokemon.Name)</h5>
                        <button class="btn btn-primary" @onclick="() => NavigateToPokemon(pokemon.Name)">View Details</button>
                    </div>
                </div>
            </div>
        }
    </div>
}
@code {
    const int ItemsPerPage = 12;
    private List<Pokemon> PokemonList;

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PokemonList = await PokeApiService.GetAllPokemonAsync(12, 0);
    }

    private void NavigateToPokemon(string name)
    {
        NavigationManager.NavigateTo($"/pokedex/{name}");
    }

}